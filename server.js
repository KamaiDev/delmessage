/* 

DDDDDDD        EEEEEEEEE  VVV             VVV
DDDDDDDDDD     EEEEEEEEE   VVV           VVV
DDDD    DDD    EEE          VVV         VVV
DDDD      DDD  EEEEEE        VVV       VVV
DDDD      DDD  EEEEEE         VVV     VVV
DDDD    DDD    EEE             VVV   VVV
DDDDDDDDD      EEEEEEEEE        VVV VVV
DDDDDD         EEEEEEEEE          VVV

üç∑ Desenvolvido por: NotDev
üíª Script de apagar mensagens de canais/DMs com apenas 1 comando
üó≥Ô∏è Sugest√µes de Scripts? Me add: NotDev'·¥Æ·¥∏‚Å∞#0666
üëë Quer o c√≥digo aberto? Me fa√ßa uma proposta no meu privado ;)

üí≥ Tamb√©m Vendo üí≥
‚Ä¢ Script de divulga√ß√£o
‚Ä¢ Apagar mensagens canais/privado
‚Ä¢ Bot Anti Raid privado pro seu servidor
‚Ä¢ Vendo entrada para a banca R$ 400,00 ( meme, Iroh. Casa comigo )

üìö Como Usar üìö

1 ‚Ä¢ Coloque a token da conta na pasta .env
2 ‚Ä¢ Configure o prefixo desejado
3 ‚Ä¢ V√° ao canal/DM desejada e use o comando ${prefixo}delmsg
[Nota] Evite usar muitas vezes ao dia para n√£o dar rate limit e sua conta cair :/

*/

require('dotenv').config()

const fs      = require('fs')
const Enmap   = require('enmap')
const Discord = require('discord.js')

const bot     = new Discord.Client();

fs.readdir("./events/", (err, files) => {
    if (err) return console.error(err);
    files.forEach(file => {
        const event = require(`./events/${file}`);
        let eventName = file.split(".")[0];
        bot.on(eventName, event.bind(null, bot));
    });
});

bot.commands = new Discord.Collection();

fs.readdir("./commands/", (err, files) => {
    if (err) console.log(err);

    let jsfile = files.filter(f => f.split(".").pop() === "js")
    if(jsfile.length <= 0){
        console.log("\nN√£o Foi encontrado nenhum comando")
        return;
    }

    jsfile.forEach((f, i) => {
        let props = require(`./commands/${f}`);
        console.log(`${f} carregado...`);
        bot.commands.set(props.help.name, props);
    })
})  

if(!process.env.TOKEN) process.env.TOKEN = "Nothing"
bot.login(process.env.TOKEN).catch(() => { console.log(`Token Inv√°lida ::: ${process.env.TOKEN}`) })